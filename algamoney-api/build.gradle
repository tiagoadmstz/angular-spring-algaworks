plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'io.github.tiagoadmstz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security.oauth:spring-security-oauth2:2.5.0.RELEASE'
    implementation 'org.springframework.security:spring-security-jwt:1.1.1.RELEASE'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'mysql:mysql-connector-java:8.0.21'
    compileOnly 'org.springframework.boot:spring-boot-gradle-plugin:2.3.1.RELEASE'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'com.h2database:h2:1.4.200'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.hibernate:hibernate-jpamodelgen:5.0.12.Final'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}